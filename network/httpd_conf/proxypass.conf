Listen 8080
Listen 8443
NameVirtualHost *:8080 
NameVirtualHost *:8443

<VirtualHost *:8080>
    Redirect "/" "https://CHANGEELBENDPOINT/"
</VirtualHost>


<VirtualHost *:8443>
    SSLEngine on
    SSLCertificateFile /etc/httpd/certs/wildcard.xxxxxxxxxxxxx.crt
    SSLCertificateKeyFile /etc/httpd/certs/wildcard.xxxxxxxxxxx.key

#doc : Les fichiers de ce répertoire doivent être codés en PEM et ils sont accédés via des noms de fichier sous forme de condensés ou hash. Il ne suffit donc pas de placer les fichiers de certificats dans ce répertoire : vous devez aussi créer des liens symboliques nommés valeur-de-hashage.N, et vous devez toujours vous assurer que ce répertoire contient les liens symboliques appropriés.
# openssl x509 -noout -hash < /etc/httpd/certs/allowed/cacert.pem
# ln --symbolic --no-target-directory cacert.pem 59fb035e.0 where .0 = index to avoid collisions
#    SSLCACertificateFile /etc/httpd/certs/allowed/cacert.pem
    SSLCACertificatePath /etc/httpd/certs/allowed/
    SSLCARevocationPath /etc/httpd/certs/revoked/
    SSLVerifyClient require
    SSLVerifyDepth  2
    SSLOptions +StdEnvVars +ExportCertData
    #SSLOptions +ExportCertData +FakeBasicAuth +StrictRequire +StdEnvVars
    SSLProxyEngine          On

    # initialize the special headers to a blank value to avoid http header forgeries
    RequestHeader set SSL_CLIENT_S_DN    ""
    RequestHeader set SSL_CLIENT_I_DN    ""
    RequestHeader set SSL_SERVER_S_DN_OU ""
    RequestHeader set SSL_CLIENT_VERIFY  ""
    RequestHeader set SSL_CLIENT_V_START  ""
    RequestHeader set SSL_CLIENT_V_END  ""
    RequestHeader set SSL_CLIENT_M_VERSION  ""
    RequestHeader set SSL_CLIENT_M_SERIAL  ""
    RequestHeader set SSL_CLIENT_CERT  ""
    RequestHeader set SSL_CLIENT_VERIFY  ""
    RequestHeader set SSL_SERVER_M_SERIAL  ""
    RequestHeader set SSL_SERVER_M_VERSION  ""
    RequestHeader set SSL_SERVER_I_DN  ""
    RequestHeader set SSL_SERVER_CERT  ""
   <Location />
        RequestHeader set SSL_CLIENT_S_DN "%{SSL_CLIENT_S_DN}s"
        RequestHeader set SSL_CLIENT_I_DN "%{SSL_CLIENT_I_DN}s"
        RequestHeader set SSL_SERVER_S_DN_OU "%{SSL_SERVER_S_DN_OU}s"
        RequestHeader set SSL_CLIENT_VERIFY "%{SSL_CLIENT_VERIFY}s"
        RequestHeader set SSL_CLIENT_V_START "%{SSL_CLIENT_V_START}s"
        RequestHeader set SSL_CLIENT_V_END "%{SSL_CLIENT_V_END}s"
        RequestHeader set SSL_CLIENT_M_VERSION "%{SSL_CLIENT_M_VERSION}s"
        RequestHeader set SSL_CLIENT_M_SERIAL "%{SSL_CLIENT_M_SERIAL}s"
        RequestHeader set SSL_CLIENT_CERT "%{SSL_CLIENT_CERT}s"
        RequestHeader set SSL_CLIENT_VERIFY "%{SSL_CLIENT_VERIFY}s"
        RequestHeader set SSL_SERVER_M_VERSION "%{SSL_SERVER_M_VERSION}s"
        RequestHeader set SSL_SERVER_I_DN "%{SSL_SERVER_I_DN}s"
        RequestHeader set SSL_SERVER_CERT "%{SSL_SERVER_CERT}s"

        ProxyPass http://CHANGEBACKEND:80/
        ProxyPassReverse http://CHANGEBACKEND:80/
    </Location>
</VirtualHost>

